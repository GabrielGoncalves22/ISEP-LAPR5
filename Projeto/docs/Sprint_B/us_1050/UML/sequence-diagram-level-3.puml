@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title System Sequence Diagram (Level 3 - Process View) - US 1050
autonumber

Actor "Campus Manager" as campusManager
participant "View" as View <<Component>>
participant "Component" as Component <<Component>>
participant "buildingModel :\n building.model" as buildingModel
participant "Service" as Service <<Component>>

participant "buildingRoute" as route <<Route>>
participant "ctrlBuilding :\n IBuildingController" as controller <<Controller>>
participant "buildingServiceInstance :\n IBuildingService" as service <<Service>>
participant "buildingRepo :\n IBuildingRepository" as repo <<Repository>>
participant "DB" as db <<DataBase>>

participant "building :\n building" as building <<Domain>>
participant "buildingDTO :\n IBuildingDTO" as buildingDTO <<DTO>>

activate campusManager
    campusManager -> View : Ask to create building
    activate View
        View --> campusManager : Ask to insert data
    deactivate View

    campusManager -> View : Insert data
    activate View
        View -> Component : createBuilding()
        activate Component
            Component --> buildingModel** :
            Component -> Service : createBuilding(buildingModel)
            activate Service
                Service -> route : POST (.../buildings)
                activate route

                    route -> controller : execute(req, res, next)
                    activate controller
                        controller -> controller : createBuilding(req, res, next)
                        activate controller
                            controller --> buildingDTO** :
                            controller -> service : createBuilding(buildingDTO)

                            activate service
                                service --> building** : create
                                service -> repo : save(building)
                                activate repo
                                    repo -> db : create(building)
                                    db --> repo :
                                    repo --> service :
                                deactivate repo
                                service --> controller :
                            deactivate service

                            controller --> controller : status: 201/400
                        deactivate controller
                        controller --> route : status: 201/400
                    deactivate controller

                    route --> Service : status: 201/400
                deactivate route
                Service --> Component : Success / Error
            deactivate Service

            Component --> View : Information about the success/error
        deactivate Component
        View --> campusManager : Informs about the operation success/error
    deactivate View
deactivate campusManager

@enduml
